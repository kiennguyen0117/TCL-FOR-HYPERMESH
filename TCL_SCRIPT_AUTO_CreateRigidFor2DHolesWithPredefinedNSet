#CREATE RIGID FROM NSET

if {0} {
	*deleteedges;
	
}

*elementtype 5 4;

# CHECK THE EXISTANCE OF 2D RIGID NSET
	if {1} {
		# CREATE A Nset for nodes
			if {[hm_entityinfo exist sets rigidFor2dHole -byname]} {
			} else {
				*createmark nodes 1
				*entitysetcreate "rigidFor2dHole" nodes 1
			}
	}
	
# CHECK THE EXISTANCE OF COMP INCLUDE RIGID
		if {1} {
		# CREATE COMP FOR RIGID
			if {[hm_entityinfo exist COMP HM_MPC_BEAM -byname]} {
				*currentcollector components "HM_MPC_BEAM"

			} else {
				*createentity comps name=HM_MPC_BEAM;
			}
	}
# GET NODES FROM USER
	if {1} {
		*createmarkpanel nodes 1 "select nodes";
		set userNode [hm_getmark nodes 1];
		
		set allNodeForRigid [hm_getmark nodes 1];
	}
	
# PUTS NODES TO NSET
	if {1} {
		
		set setId [hm_entitymaxid sets 0];
		eval *setvalue sets id=$setId ids={nodes $allNodeForRigid};
	}
	
# GET NODES IN THE CIRCLE
set finalNode {};
	if {1} {

		
		foreach node $allNodeForRigid {
		# GET COMP ID ATTACHED TO THIS NODES
			if {1} {
				*createmark nodes 1 $node;
				*findmark nodes 1 1 1 elem 0 2;;
				set tempElemId [hm_getmark elem 2];
				set tempElemId [lindex $tempElemId 0];
				
				set compId [hm_getvalue elem id=$tempElemId dataname=collector.id];
				
			}
			# FIND EDGE FOR THIS COMP;
			if {1} {
				*createmark components 1 $compId;
				*findedges1 components 1 0 0 0 30;
				
				# ISOLATE EDGE
				*createmark components 2 "^edges"
				*createstringarray 2 "elements_on" "geometry_on"
				*isolateentitybymark 2 1 2
			}
			# FIND ELEM ATTACHED TO THIS NODES;
			if {1} {
				set oneDElemId {};
				*createmark nodes 1 $node;
				*findmark nodes 1 1 1 elem 0 2;
				set tempElemId [hm_getmark elem 2];
				
				foreach id $tempElemId {
					if {[hm_getvalue elem id=$id dataname=config] == 2 } {
						set oneDElemId $id;
						break;
					}
				}	
			  # ISOLATE EDGE
				*createmark components 2 "^edges";
				*createstringarray 2 "elements_on" "geometry_on";
				*isolateentitybymark 2 1 2;
				
				# GET ALL NODES ON CIRCLE
				*createmark elem 1 $oneDElemId;
				*appendmark elem 1 "by attached";
				
				*findmark elem 1 1 1 nodes 0 2;
				set semi_finalNode [hm_getmark nodes 2];
				*deleteedges;
				# GET ALL ELEM ATTACHED TO THOSE NODES
					eval *createmark nodes 1 $semi_finalNode;
					*findmark nodes 1 1 1 elem 0 1;
					*findmark elem 1 1 1 nodes 0 2;
					#set finalNode [hm_getmark nodes 2];
					*rigidlinkinodecalandcreate 2 0 0 123456
					
			}
		}
		
	}

